import 'package:equatable/equatable.dart';import 'package:flutter/material.dart';import '/core/app_export.dart';import '../models/categories_item_model.dart';import '../models/categories1_item_model.dart';import 'package:ecommerce_shop/presentation/explore_page/models/explore_model.dart';part 'explore_event.dart';part 'explore_state.dart';/// A bloc that manages the state of a Explore according to the event that is dispatched to it.
class ExploreBloc extends Bloc<ExploreEvent, ExploreState> {ExploreBloc(ExploreState initialState) : super(initialState) { on<ExploreInitialEvent>(_onInitialize); }

List<CategoriesItemModel> fillCategoriesItemList() { return [CategoriesItemModel(manWorkEquipment: ImageConstant.imgManWorkEquipment, officeBag: "Office Bag"), CategoriesItemModel(manWorkEquipment: ImageConstant.imgArrowRight, officeBag: "Shirt"), CategoriesItemModel(manWorkEquipment: ImageConstant.imgManTShirtIcon, officeBag: "T-Shirt"), CategoriesItemModel(manWorkEquipment: ImageConstant.imgManShoesIcon, officeBag: "Shoes"), CategoriesItemModel(manWorkEquipment: ImageConstant.imgManPantsIcon, officeBag: "Pants"), CategoriesItemModel(manWorkEquipment: ImageConstant.imgManUnderwearIcon, officeBag: "Underwear")]; } 
List<Categories1ItemModel> fillCategories1ItemList() { return [Categories1ItemModel(womanTShirtIcon: ImageConstant.imgWomanTShirtIcon, tShirt: "T-Shirt"), Categories1ItemModel(womanTShirtIcon: ImageConstant.imgDressIcon, tShirt: "Dress"), Categories1ItemModel(womanTShirtIcon: ImageConstant.imgWomanPantsIcon, tShirt: "Pants"), Categories1ItemModel(womanTShirtIcon: ImageConstant.imgSkirtIcon, tShirt: "Skirt"), Categories1ItemModel(womanTShirtIcon: ImageConstant.imgWomanBagIcon, tShirt: "Bag"), Categories1ItemModel(womanTShirtIcon: ImageConstant.imgHighHeelsIcon, tShirt: "Heels"), Categories1ItemModel(womanTShirtIcon: ImageConstant.imgBikiniIcon, tShirt: "Bikini")]; } 
_onInitialize(ExploreInitialEvent event, Emitter<ExploreState> emit, ) async  { emit(state.copyWith(searchController: TextEditingController())); emit(state.copyWith(exploreModelObj: state.exploreModelObj?.copyWith(categoriesItemList: fillCategoriesItemList(), categories1ItemList: fillCategories1ItemList()))); } 
 }
